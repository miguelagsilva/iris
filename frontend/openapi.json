{
  "openapi": "3.0.0",
  "paths": {
    "/api/v1/auth/user/sign-up": {
      "post": {
        "operationId": "AuthController_signUpUser",
        "summary": "Sign up as a user",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUpUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Signed up successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Content not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": ["auth"]
      }
    },
    "/api/v1/auth/user/sign-in": {
      "post": {
        "operationId": "AuthController_signInUser",
        "summary": "Sign in as a user",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignInUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Signed in successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Content not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": ["auth"]
      }
    },
    "/api/v1/auth/user/sign-out": {
      "post": {
        "operationId": "AuthController_signOutUser",
        "summary": "Sign out as a user",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Signed out successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Content not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": ["auth"],
        "security": [
          {
            "cookie": []
          }
        ]
      }
    },
    "/api/v1/auth/user/change-password": {
      "post": {
        "operationId": "AuthController_changePassword",
        "summary": "Change password as a user",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Changed password successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Content not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": ["auth"],
        "security": [
          {
            "cookie": []
          }
        ]
      }
    },
    "/api/v1/auth/user/profile": {
      "post": {
        "operationId": "AuthController_getProfileUser",
        "summary": "Get own user profile",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Retrieved profile successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SafeUserDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Content not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": ["auth"],
        "security": [
          {
            "cookie": []
          }
        ]
      }
    },
    "/api/v1/users": {
      "post": {
        "operationId": "UsersController_create",
        "summary": "Create a new user",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SafeUserDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Content not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": ["users", "Admin"]
      },
      "get": {
        "operationId": "UsersController_paginate",
        "summary": "Get all users",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of items per page",
            "schema": {
              "minimum": 1,
              "maximum": 50,
              "default": 20,
              "type": "number"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "Filter criteria",
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Field to sort by",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "description": "Sort order",
            "schema": {
              "enum": ["ASC", "DESC"],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved all users successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginationResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Content not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": ["users", "Admin"]
      }
    },
    "/api/v1/users/{id}": {
      "get": {
        "operationId": "UsersController_findOne",
        "summary": "Get a user by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved user successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SafeUserDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Content not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": ["users", "Admin"]
      },
      "put": {
        "operationId": "UsersController_update",
        "summary": "Update a user",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SafeUserDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Content not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": ["users", "Admin"]
      },
      "patch": {
        "operationId": "UsersController_partialUpdate",
        "summary": "Partially update a user",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User partially updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SafeUserDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Content not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": ["users", "Admin"]
      },
      "delete": {
        "operationId": "UsersController_remove",
        "summary": "Soft delete a user",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User soft deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SafeUserDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Content not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": ["users", "Admin"]
      }
    },
    "/api/v1/users/{id}/restore": {
      "post": {
        "operationId": "UsersController_restore",
        "summary": "Restore a soft-deleted user",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User restored successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SafeUserDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Content not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": ["users", "Admin"]
      }
    },
    "/api/v1/users/me": {
      "get": {
        "operationId": "UsersController_getCurrentUser",
        "summary": "Get own profile",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Retrieved own user profile successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SafeUserDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Content not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": ["users", "User"]
      },
      "patch": {
        "operationId": "UsersController_updateCurrentUser",
        "summary": "Partially update own profile",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated own user profile successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SafeUserDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Content not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": ["users", "User"]
      }
    },
    "/api/v1/organizations": {
      "post": {
        "operationId": "OrganizationsController_create",
        "summary": "Create a new organization",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrganizationDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Organization created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SafeOrganizationDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Content not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": ["organizations", "Admin"]
      },
      "get": {
        "operationId": "OrganizationsController_paginate",
        "summary": "Get all organizations",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of items per page",
            "schema": {
              "minimum": 1,
              "maximum": 50,
              "default": 20,
              "type": "number"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "Filter criteria",
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Field to sort by",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "description": "Sort order",
            "schema": {
              "enum": ["ASC", "DESC"],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved all organizations successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginationResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Content not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": ["organizations", "Admin"]
      }
    },
    "/api/v1/organizations/{id}": {
      "get": {
        "operationId": "OrganizationsController_findOne",
        "summary": "Get an organization by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved organization successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SafeOrganizationDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Content not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": ["organizations", "Organization"]
      },
      "put": {
        "operationId": "OrganizationsController_update",
        "summary": "Update an organization",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrganizationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Organization updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SafeOrganizationDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Content not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": ["organizations", "Admin"]
      },
      "patch": {
        "operationId": "OrganizationsController_partialUpdate",
        "summary": "Partially update an organization",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrganizationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Organization partially updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SafeOrganizationDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Content not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": ["organizations", "Admin"]
      },
      "delete": {
        "operationId": "OrganizationsController_remove",
        "summary": "Soft delete an organization",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Organization soft deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SafeOrganizationDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Content not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": ["organizations", "Admin"]
      }
    },
    "/api/v1/organizations/{id}/restore": {
      "post": {
        "operationId": "OrganizationsController_restore",
        "summary": "Restore a soft-deleted organization",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Organization restored successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SafeOrganizationDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Content not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": ["organizations", "Admin"]
      }
    },
    "/api/v1/organizations/{id}/users/{userId}": {
      "post": {
        "operationId": "OrganizationsController_addUserToOrganization",
        "summary": "Add a user to an organization",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Added user to organization successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SafeUserDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Content not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": ["organizations", "Organization"]
      },
      "delete": {
        "operationId": "OrganizationsController_removeUserFromOrganization",
        "summary": "Remove user from an organization",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Removed user from organization successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SafeUserDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Content not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": ["organizations", "Organization"]
      }
    },
    "/api/v1/organizations/{id}/users": {
      "get": {
        "operationId": "OrganizationsController_getOrganizationUsers",
        "summary": "Get all users in an organization",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved organization users successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SafeUserDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Content not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": ["organizations", "Organization"]
      }
    },
    "/api/v1/organizations/{id}/groups": {
      "get": {
        "operationId": "OrganizationsController_getOrganizationGroups",
        "summary": "Get all groups of an organization",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved organization groups successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SafeGroupDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Content not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": ["organizations", "Organization"]
      }
    },
    "/api/v1/organizations/{id}/employees": {
      "get": {
        "operationId": "OrganizationsController_getOrganizationEmployees",
        "summary": "Get all employees of an organization",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved organization employees successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SafeEmployeeDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Content not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": ["organizations", "Organization"]
      }
    },
    "/api/v1/groups": {
      "post": {
        "operationId": "GroupsController_create",
        "summary": "Create a new group",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGroupDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Group created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SafeGroupDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Content not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": ["groups", "Organization"]
      }
    },
    "/api/v1/groups/{id}": {
      "get": {
        "operationId": "GroupsController_findOne",
        "summary": "Get a group by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved group successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SafeGroupDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Content not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": ["groups", "Organization"]
      },
      "put": {
        "operationId": "GroupsController_update",
        "summary": "Update a group",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGroupDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Group updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SafeGroupDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Content not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": ["groups", "Organization"]
      },
      "patch": {
        "operationId": "GroupsController_partialUpdate",
        "summary": "Partially update a group",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGroupDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Group partially updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SafeGroupDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Content not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": ["groups", "Organization"]
      },
      "delete": {
        "operationId": "GroupsController_remove",
        "summary": "Soft delete a group",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Group soft deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SafeGroupDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Content not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": ["groups", "Organization"]
      }
    },
    "/api/v1/groups/{id}/restore": {
      "post": {
        "operationId": "GroupsController_restore",
        "summary": "Restore a soft-deleted group",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Group restored successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SafeGroupDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Content not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": ["groups", "Organization"]
      }
    },
    "/api/v1/groups/{id}/employees": {
      "get": {
        "operationId": "GroupsController_getEmployees",
        "summary": "Get all employees of a group by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved group employees successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SafeEmployeeDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Content not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": ["groups", "Organization"]
      }
    },
    "/api/v1/groups/{id}/employees/{employeeId}": {
      "post": {
        "operationId": "GroupsController_addEmployeeToGroup",
        "summary": "Add employee to a group",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "employeeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Employee added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SafeEmployeeDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Content not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": ["groups", "Organization"]
      },
      "delete": {
        "operationId": "GroupsController_removeEmployeeFromGroup",
        "summary": "Remove employee from a group",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "employeeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Employee removed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SafeGroupDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Content not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": ["groups", "Organization"]
      }
    },
    "/api/v1/employees": {
      "post": {
        "operationId": "EmployeesController_create",
        "summary": "Create a new employee",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEmployeeDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Employee created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SafeEmployeeDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Content not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": ["employees", "Organization"]
      }
    },
    "/api/v1/employees/{id}": {
      "get": {
        "operationId": "EmployeesController_findOne",
        "summary": "Get a employee by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved employee successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SafeEmployeeDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Content not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": ["employees", "Organization"]
      },
      "put": {
        "operationId": "EmployeesController_update",
        "summary": "Update a employee",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEmployeeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Employee updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SafeEmployeeDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Content not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": ["employees", "Organization"]
      },
      "patch": {
        "operationId": "EmployeesController_partialUpdate",
        "summary": "Partially update a employee",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEmployeeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Employee partially updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SafeEmployeeDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Content not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": ["employees", "Organization"]
      },
      "delete": {
        "operationId": "EmployeesController_remove",
        "summary": "Soft delete a employee",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Employee soft deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SafeEmployeeDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Content not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": ["employees", "Organization"]
      }
    },
    "/api/v1/employees/{id}/restore": {
      "post": {
        "operationId": "EmployeesController_restore",
        "summary": "Restore a soft-deleted employee",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Employee restored successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SafeEmployeeDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Content not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": ["employees", "Organization"]
      }
    },
    "/api/v1/employees/{id}/groups": {
      "get": {
        "operationId": "EmployeesController_getGroups",
        "summary": "Get all groups of an employee by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved employees groups successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SafeGroupDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Content not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": ["employees", "Organization"]
      }
    },
    "/api/v1/employees/{id}/groups/{groupId}": {
      "post": {
        "operationId": "EmployeesController_addGroupToEmployee",
        "summary": "Add group to an employee",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Group added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SafeEmployeeDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Content not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": ["employees", "Organization"]
      }
    },
    "/api/v1/employees/{id}/group/{groupId}": {
      "delete": {
        "operationId": "EmployeesController_removeGroupFromEmployee",
        "summary": "Remove group from an employee",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Group removed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SafeEmployeeDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Content not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": ["employees", "Organization"]
      }
    }
  },
  "info": {
    "title": "OpenAPI",
    "description": "\n      # Authentication and Permissions\n\n      This API uses the following authentication and permission levels:\n\n      - **Public**: No authentication required\n      - **User** \n      - **Admin**\n      - **Organization Member**\n\n      Each endpoint in this documentation specifies its required permission level in the description.\n    ",
    "version": "1.0",
    "contact": {}
  },
  "tags": [
    {
      "name": "Public",
      "description": "Endpoints that do not require authentication"
    },
    {
      "name": "User",
      "description": "Endpoints that require user authentication"
    },
    {
      "name": "Admin",
      "description": "Endpoints that require admin privileges"
    },
    {
      "name": "Organization",
      "description": "Endpoints that require organization membership"
    },
    {
      "name": "auth",
      "description": "Auth related endpoints"
    },
    {
      "name": "users",
      "description": "User related endpoints"
    },
    {
      "name": "organizations",
      "description": "Organization related endpoints"
    },
    {
      "name": "groups",
      "description": "Group related endpoints"
    }
  ],
  "servers": [],
  "components": {
    "securitySchemes": {
      "cookie": {
        "type": "apiKey",
        "in": "cookie",
        "name": "user_sid"
      }
    },
    "schemas": {
      "SignUpUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          }
        },
        "required": ["email", "password", "firstName", "lastName"]
      },
      "SignInUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": ["email", "password"]
      },
      "ChangePasswordUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "oldPassword": {
            "type": "string"
          },
          "newPassword": {
            "type": "string"
          }
        },
        "required": ["email", "oldPassword", "newPassword"]
      },
      "SafeUserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "organizationId": {
            "type": "string"
          }
        },
        "required": ["id", "email", "firstName", "lastName", "organizationId"]
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          }
        },
        "required": ["email", "password", "firstName", "lastName"]
      },
      "PaginationResult": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "array"
            }
          },
          "total": {
            "type": "number"
          },
          "page": {
            "type": "number"
          },
          "limit": {
            "type": "number"
          },
          "pages": {
            "type": "number"
          }
        },
        "required": ["items", "total", "page", "limit", "pages"]
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          }
        },
        "required": ["email", "password", "firstName", "lastName"]
      },
      "CreateOrganizationDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": ["code", "name"]
      },
      "SafeOrganizationDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": ["code", "name"]
      },
      "UpdateOrganizationDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": ["code", "name"]
      },
      "SafeGroupDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "organizationId": {
            "type": "string"
          }
        },
        "required": ["id", "name", "organizationId"]
      },
      "SafeEmployeeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "phone_number": {
            "type": "string"
          },
          "organizationId": {
            "type": "string"
          }
        },
        "required": ["id", "name", "phone_number", "organizationId"]
      },
      "CreateGroupDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "organizationId": {
            "type": "string"
          }
        },
        "required": ["name", "organizationId"]
      },
      "UpdateGroupDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "required": ["name"]
      },
      "CreateEmployeeDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "organizationId": {
            "type": "string"
          },
          "phone_number": {
            "type": "string"
          }
        },
        "required": ["name", "organizationId", "phone_number"]
      },
      "UpdateEmployeeDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "phone_number": {
            "type": "string"
          }
        },
        "required": ["name", "phone_number"]
      }
    }
  }
}
